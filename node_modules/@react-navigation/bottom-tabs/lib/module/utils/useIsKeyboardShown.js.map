{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","Keyboard","Platform","useIsKeyboardShown","isKeyboardShown","setIsKeyboardShown","useState","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","OS","addListener","forEach","s","remove"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAA8BC,QAA9B,EAAwCC,QAAxC,QAAwD,cAAxD;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9C;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,UAAMC,kBAAkB,GAAG,MAAMH,kBAAkB,CAAC,IAAD,CAAnD;;AACA,UAAMI,kBAAkB,GAAG,MAAMJ,kBAAkB,CAAC,KAAD,CAAnD;;AAEA,QAAIK,aAAJ;;AAEA,QAAIR,QAAQ,CAACS,EAAT,KAAgB,KAApB,EAA2B;AACzBD,MAAAA,aAAa,GAAG,CACdT,QAAQ,CAACW,WAAT,CAAqB,kBAArB,EAAyCJ,kBAAzC,CADc,EAEdP,QAAQ,CAACW,WAAT,CAAqB,kBAArB,EAAyCH,kBAAzC,CAFc,CAAhB;AAID,KALD,MAKO;AACLC,MAAAA,aAAa,GAAG,CACdT,QAAQ,CAACW,WAAT,CAAqB,iBAArB,EAAwCJ,kBAAxC,CADc,EAEdP,QAAQ,CAACW,WAAT,CAAqB,iBAArB,EAAwCH,kBAAxC,CAFc,CAAhB;AAID;;AAED,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACG,OAAd,CAAuBC,CAAD,IAAOA,CAAC,CAACC,MAAF,EAA7B;AACD,KAFD;AAGD,GArBD,EAqBG,EArBH;AAuBA,SAAOX,eAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]}