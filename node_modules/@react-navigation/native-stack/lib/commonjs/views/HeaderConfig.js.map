{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","headerBackImageSource","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","route","headerSearchBarOptions","title","insets","colors","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","titleText","undefined","name","headerLeftElement","headerRightElement","headerTitleElement","children","SearchBar","Error","backButtonInCustomView","backgroundColor","card","fontSize","I18nManager","isRTL","color","fontWeight","top","styles","row","create","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { I18nManager, Platform, StyleSheet, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  route,\n  headerSearchBarOptions,\n  title,\n}: Props): JSX.Element {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor != null\n      ? headerTintColor\n      : Platform.OS === 'ios'\n      ? colors.primary\n      : colors.text;\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = title !== undefined ? title : route.name;\n\n  const headerLeftElement = headerLeft?.({ tintColor });\n  const headerRightElement = headerRight?.({ tintColor });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({ tintColor, children: titleText })\n      : null;\n\n  if (\n    Platform.OS === 'ios' &&\n    headerSearchBarOptions != null &&\n    SearchBar == null\n  ) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerTransparent ? 'transparent' : colors.card)\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={headerShadowVisible === false}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={typeof headerTitle === 'string' ? headerTitle : titleText}\n      titleColor={\n        headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text\n      }\n      titleFontFamily={titleFontFamily}\n      titleFontSize={headerTitleStyleFlattened.fontSize}\n      titleFontWeight={headerTitleStyleFlattened.fontWeight}\n      topInsetEnabled={insets.top !== 0}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        headerTransparent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle tintColor={tintColor}>{titleText}</HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle tintColor={tintColor}>{titleText}</HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {Platform.OS === 'ios' && headerSearchBarOptions != null ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n"]}