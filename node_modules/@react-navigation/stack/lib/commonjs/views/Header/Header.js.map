{"version":3,"sources":["Header.tsx"],"names":["React","memo","Header","back","layout","progress","options","route","navigation","styleInterpolator","insets","previousTitle","headerBackTitle","undefined","title","goBack","useCallback","isFocused","canGoBack","dispatch","StackActions","pop","source","key","isModal","useContext","ModalPresentationContext","isParentHeaderShown","HeaderShownContext","statusBarHeight","headerStatusBarHeight","top","name"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;4BAEeA,KAAK,CAACC,IAAN,CAAW,SAASC,MAAT,CAAgB;AACxCC,EAAAA,IADwC;AAExCC,EAAAA,MAFwC;AAGxCC,EAAAA,QAHwC;AAIxCC,EAAAA,OAJwC;AAKxCC,EAAAA,KALwC;AAMxCC,EAAAA,UANwC;AAOxCC,EAAAA;AAPwC,CAAhB,EAQL;AACnB,QAAMC,MAAM,GAAG,oDAAf;AAEA,MAAIC,aAAJ,CAHmB,CAKnB;AACA;;AACA,MAAIL,OAAO,CAACM,eAAR,KAA4BC,SAAhC,EAA2C;AACzCF,IAAAA,aAAa,GAAGL,OAAO,CAACM,eAAxB;AACD,GAFD,MAEO,IAAIT,IAAJ,EAAU;AACfQ,IAAAA,aAAa,GAAGR,IAAI,CAACW,KAArB;AACD,GAXkB,CAanB;;;AACA,QAAMC,MAAM,GAAGf,KAAK,CAACgB,WAAN,CACb,uBAAS,MAAM;AACb,QAAIR,UAAU,CAACS,SAAX,MAA0BT,UAAU,CAACU,SAAX,EAA9B,EAAsD;AACpDV,MAAAA,UAAU,CAACW,QAAX,CAAoB,EAClB,GAAGC,qBAAaC,GAAb,EADe;AAElBC,QAAAA,MAAM,EAAEf,KAAK,CAACgB;AAFI,OAApB;AAID;AACF,GAPD,EAOG,EAPH,CADa,EASb,CAACf,UAAD,EAAaD,KAAK,CAACgB,GAAnB,CATa,CAAf;AAYA,QAAMC,OAAO,GAAGxB,KAAK,CAACyB,UAAN,CAAiBC,iCAAjB,CAAhB;AACA,QAAMC,mBAAmB,GAAG3B,KAAK,CAACyB,UAAN,CAAiBG,4BAAjB,CAA5B;AAEA,QAAMC,eAAe,GACnBvB,OAAO,CAACwB,qBAAR,KAAkCjB,SAAlC,GACIP,OAAO,CAACwB,qBADZ,GAEIN,OAAO,IAAIG,mBAAX,GACA,CADA,GAEAjB,MAAM,CAACqB,GALb;AAOA,sBACE,oBAAC,sBAAD,eACMzB,OADN;AAEE,IAAA,KAAK,EAAE,8BAAeA,OAAf,EAAwBC,KAAK,CAACyB,IAA9B,CAFT;AAGE,IAAA,QAAQ,EAAE3B,QAHZ;AAIE,IAAA,MAAM,EAAED,MAJV;AAKE,IAAA,KAAK,EAAEoB,OALT;AAME,IAAA,eAAe,EACblB,OAAO,CAACM,eAAR,KAA4BC,SAA5B,GACIP,OAAO,CAACM,eADZ,GAEID,aATR;AAWE,IAAA,qBAAqB,EAAEkB,eAXzB;AAYE,IAAA,QAAQ,EAAE1B,IAAI,GAAGY,MAAH,GAAYF,SAZ5B;AAaE,IAAA,iBAAiB,EAAEJ;AAbrB,KADF;AAiBD,CA7Dc,C","sourcesContent":["import { getHeaderTitle, HeaderShownContext } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type { StackHeaderProps } from '../../types';\nimport debounce from '../../utils/debounce';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport HeaderSegment from './HeaderSegment';\n\nexport default React.memo(function Header({\n  back,\n  layout,\n  progress,\n  options,\n  route,\n  navigation,\n  styleInterpolator,\n}: StackHeaderProps) {\n  const insets = useSafeAreaInsets();\n\n  let previousTitle;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    previousTitle = options.headerBackTitle;\n  } else if (back) {\n    previousTitle = back.title;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      if (navigation.isFocused() && navigation.canGoBack()) {\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n        });\n      }\n    }, 50),\n    [navigation, route.key]\n  );\n\n  const isModal = React.useContext(ModalPresentationContext);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const statusBarHeight =\n    options.headerStatusBarHeight !== undefined\n      ? options.headerStatusBarHeight\n      : isModal || isParentHeaderShown\n      ? 0\n      : insets.top;\n\n  return (\n    <HeaderSegment\n      {...options}\n      title={getHeaderTitle(options, route.name)}\n      progress={progress}\n      layout={layout}\n      modal={isModal}\n      headerBackTitle={\n        options.headerBackTitle !== undefined\n          ? options.headerBackTitle\n          : previousTitle\n      }\n      headerStatusBarHeight={statusBarHeight}\n      onGoBack={back ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n"]}